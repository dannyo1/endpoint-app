{"version":3,"sources":["components/header.js","components/footer.js","data/endpoints/api.js","App.js","data/markdown/app_background.js","index.js"],"names":["Header","className","to","Footer","Date","getFullYear","getDogPictures","setPictures","a","axios","get","then","res","console","log","data","catch","e","App","useState","pictures","useEffect","id","source","map","pic","idx","src","image","alt","Index","path","component","ReactDOM","render","document","getElementById"],"mappings":"mMAeeA,EAZA,kBACb,wBAAQC,UAAU,WAAlB,SACE,8BACE,8BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,oBAAID,UAAU,aAAd,4CCEKE,EARA,WACb,OACE,qBAAKF,UAAU,SAAf,SACE,4CAAW,IAAIG,MAAOC,cAAtB,0B,mEC2BQC,EAAc,uCAAG,WAAOC,GAAP,SAAAC,EAAA,4DAEf,8BAFe,kBAGpBC,IACJC,IAFS,+BAGTC,MAAK,SAACC,GACLC,QAAQC,IAAI,QAASF,EAAIG,MACzBR,EAAYK,EAAIG,MAChBF,QAAQC,IAAIF,EAAIG,SAEjBC,OAAM,SAACC,GACNJ,QAAQC,IAAIG,GACZJ,QAAQC,IAAI,qBAZW,2CAAH,sDCkCbI,EAzDH,WAAO,IAAD,EACgBC,mBAAS,MADzB,mBACTC,EADS,KACCb,EADD,KAgBhB,OARAc,qBAAU,WACHD,GAEHd,EAAeC,KAGhB,CAACa,IAGF,qBAAKnB,UAAU,OAAf,SACE,sBAAKqB,GAAG,UAAR,UACE,cAAC,IAAD,CAAerB,UAAU,aAAasB,OC5B1B,6CD8BZ,qBAAKtB,UAAU,YAAf,SAOE,qBAAKA,UAAU,gCAAf,SAMGmB,EACCA,EAASI,KAAI,SAACC,EAAKC,GAAN,OACX,sBAAKzB,UAAU,YAAf,UAGGY,QAAQC,IAAIW,GACb,qBACEE,IAAKF,EAAIG,MACT3B,UAAU,0BACV4B,IAAI,UAPwBH,MAYlC,0DE/CRI,G,cAAQ,kBACZ,qBAAK7B,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,8BACE,cAAC,IAAD,CAAO8B,KAAK,IAAIC,UAAWd,MAE7B,cAAC,EAAD,WAKNe,IAASC,OAAO,cAAC,EAAD,IAAWC,SAASC,eAAe,W","file":"static/js/main.df44c877.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => (\n  <header className=\"masthead\">\n    <div>\n      <div>\n        <Link to=\"/\">\n          <h1 className=\"site-title\">Name of Your App Here</h1>\n        </Link>\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <footer>Â© {new Date().getFullYear()} - Your Name Here</footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\n// a function that grabs all avatar characters pics! FEEL FREE TO DELETE THIS FUNCTION\nexport const getAllAvatarCharacters = async (setCharacters) => {\n  let example_var = \"\";\n  // here's an example of what adding a variable to a string looks like\n  // in this case it's empty, but imagine inserting different types of strings / numbers to grab different types of data\n  // check the documentation of your API to see the formating of the endpoint & which vars it can take!\n  const url = `https://last-airbender-api.herokuapp.com/api/v1/characters/${example_var}`;\n  return axios\n    .get(url)\n    .then((res) => {\n      setCharacters(res.data);\n      // you don't have to return anything! this model would be good if you weren't passing the function as a param\n      // this would return an object saying the axios call was successful! (good for a success popup notification)\n      return { data: res.data, success: true };\n    })\n    .catch((e) => {\n      // if there is a failure, I return a custom object saying success is false, with the error message\n      // you don't have to do this! you could simply console.log(e)\n      return { success: false, message: e.message };\n    });\n};\n\n/**\n * TODO: define your own async function that uses Axios with a .then() & .catch() block\n * - it should at minimum take a function parameter\n * - inside your then block, try console.log(res.data) to see what is printed when your axios call succeeds\n * - from there, decide what part of res.data to pass to your function parameter (in this case, I passed the entire thing!)\n * - I also deleted my custom CSS from the index.css file so feel free to have fun & play around with the look of your app!\n */\n\n export const getDogPictures = async (setPictures) => {\n\n    const url = 'https://randomfox.ca/floof/';\n    return axios\n      .get(url)\n      .then((res) => {\n        console.log(\"pics:\", res.data);\n        setPictures(res.data);\n        console.log(res.data);\n      })\n      .catch((e) => { \n        console.log(e);\n        console.log(\"asfkjabfkejbf\");\n      })\n\n };\n","import { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { app_background } from \"./data/markdown\";\n\n// import your custom data fetching function\n// TODO: add a data fetching function to the api.js file in the endpoints folder\nimport { getAllAvatarCharacters } from \"./data/endpoints\";\nimport { getDogPictures } from \"./data/endpoints\";\n\nconst App = () => {\n  const [pictures, setPictures] = useState(null);\n\n  /**\n   * TODO: modify this useEffect to pass as many params as you want\n   * - at minimum, pass your state setting function from above\n   * - you could also create more state variables to handle multiple params for your endpoint / user input\n   */\n  useEffect(() => {\n    if (!pictures) {\n      // if our characters is null, fetch some data!\n      getDogPictures(setPictures);\n    }\n    // don't forget to add every state variable you're monitoring to this array!\n  }, [pictures]);\n\n  return (\n    <div className=\"home\">\n      <div id=\"content\">\n        <ReactMarkdown className=\"background\" source={app_background} />\n\n        <div className=\"container\">\n          {/**\n           * Code explanation:\n           * Feel free to delete this or modify this. It is creating a grid using Boostrap classes\n           * - map has a 2nd parameter that tells you the elements index in the array, its good practice to pass this as the key prop\n           * - remember to print to console the data you fetch, it will definitely have different properties & values than my data!\n           */}\n          <div className=\"row justify-content-md-center\">\n            {/**\n             * - TODO: use a ternary to add conditional react elements\n             * - in this case, if characters is null, it displays \"No characters\"\n             * - otherwise, it maps through characters and renders info for each person!\n             */}\n            {pictures ? (\n              pictures.map((pic, idx) => (\n                <div className=\"col-3 dog\" key={idx}>\n              \n                  {/* Displays image of each character + adds an additional class (character-img) so I can customize in my CSS file*/}\n                  {console.log(pic)}\n                  <img\n                    src={pic.image}\n                    className=\"img-fluid character-img\"\n                    alt=\"dog\"\n                  ></img>\n                </div>\n              ))\n            ) : (\n              <div> No Dogs :-( </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const app_background = `##### Description of your app goes here!`;\n\nexport default app_background;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport { Header, Footer } from \"./components\";\nimport App from \"./App\";\n\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Index = () => (\n  <div className=\"main\">\n    <BrowserRouter>\n      <Header />\n      <div>\n        <Route path=\"/\" component={App} />\n      </div>\n      <Footer />\n    </BrowserRouter>\n  </div>\n);\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}